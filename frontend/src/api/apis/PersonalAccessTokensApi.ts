/* tslint:disable */
/* eslint-disable */
/**
 * MMRProject.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreatePersonalAccessTokenRequest,
  CreatePersonalAccessTokenResponse,
  PersonalAccessTokenResponse,
} from '../models/index';
import {
    CreatePersonalAccessTokenRequestFromJSON,
    CreatePersonalAccessTokenRequestToJSON,
    CreatePersonalAccessTokenResponseFromJSON,
    CreatePersonalAccessTokenResponseToJSON,
    PersonalAccessTokenResponseFromJSON,
    PersonalAccessTokenResponseToJSON,
} from '../models/index';

export interface PersonalAccessTokensCreateTokenRequest {
    createPersonalAccessTokenRequest: CreatePersonalAccessTokenRequest;
}

export interface PersonalAccessTokensRevokeTokenRequest {
    tokenId: number;
}

/**
 * 
 */
export class PersonalAccessTokensApi extends runtime.BaseAPI {

    /**
     */
    async personalAccessTokensCreateTokenRaw(requestParameters: PersonalAccessTokensCreateTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreatePersonalAccessTokenResponse>> {
        if (requestParameters['createPersonalAccessTokenRequest'] == null) {
            throw new runtime.RequiredError(
                'createPersonalAccessTokenRequest',
                'Required parameter "createPersonalAccessTokenRequest" was null or undefined when calling personalAccessTokensCreateToken().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/tokens`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreatePersonalAccessTokenRequestToJSON(requestParameters['createPersonalAccessTokenRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreatePersonalAccessTokenResponseFromJSON(jsonValue));
    }

    /**
     */
    async personalAccessTokensCreateToken(requestParameters: PersonalAccessTokensCreateTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreatePersonalAccessTokenResponse> {
        const response = await this.personalAccessTokensCreateTokenRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async personalAccessTokensListTokensRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PersonalAccessTokenResponse>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/tokens`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(PersonalAccessTokenResponseFromJSON));
    }

    /**
     */
    async personalAccessTokensListTokens(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PersonalAccessTokenResponse>> {
        const response = await this.personalAccessTokensListTokensRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async personalAccessTokensRevokeTokenRaw(requestParameters: PersonalAccessTokensRevokeTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['tokenId'] == null) {
            throw new runtime.RequiredError(
                'tokenId',
                'Required parameter "tokenId" was null or undefined when calling personalAccessTokensRevokeToken().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/tokens/{tokenId}`.replace(`{${"tokenId"}}`, encodeURIComponent(String(requestParameters['tokenId']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async personalAccessTokensRevokeToken(requestParameters: PersonalAccessTokensRevokeTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.personalAccessTokensRevokeTokenRaw(requestParameters, initOverrides);
    }

}
