basePath: /api
definitions:
  repos.LeaderboardEntry:
    properties:
      loses:
        type: integer
      losingStreak:
        type: integer
      mmr:
        type: integer
      name:
        type: string
      userId:
        type: integer
      winningStreak:
        type: integer
      wins:
        type: integer
    type: object
  view.ClaimUser:
    properties:
      userId:
        type: integer
    required:
    - userId
    type: object
  view.CreateUser:
    properties:
      displayName:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  view.Match:
    properties:
      team1:
        $ref: '#/definitions/view.MatchTeam'
      team2:
        $ref: '#/definitions/view.MatchTeam'
    required:
    - team1
    - team2
    type: object
  view.MatchDetails:
    properties:
      date:
        type: string
      mmrCalculations:
        $ref: '#/definitions/view.MatchMMRCalculationDetails'
      team1:
        $ref: '#/definitions/view.MatchTeam'
      team2:
        $ref: '#/definitions/view.MatchTeam'
    required:
    - date
    - team1
    - team2
    type: object
  view.MatchDetailsV2:
    properties:
      date:
        type: string
      mmrCalculations:
        $ref: '#/definitions/view.MatchMMRCalculationDetails'
      team1:
        $ref: '#/definitions/view.MatchTeamV2'
      team2:
        $ref: '#/definitions/view.MatchTeamV2'
    required:
    - date
    - team1
    - team2
    type: object
  view.MatchMMRCalculationDetails:
    properties:
      team1:
        $ref: '#/definitions/view.MatchMMRCalculationTeam'
      team2:
        $ref: '#/definitions/view.MatchMMRCalculationTeam'
    required:
    - team1
    - team2
    type: object
  view.MatchMMRCalculationTeam:
    properties:
      player1MMRDelta:
        type: integer
      player2MMRDelta:
        type: integer
    required:
    - player1MMRDelta
    - player2MMRDelta
    type: object
  view.MatchTeam:
    properties:
      member1:
        type: string
      member2:
        type: string
      score:
        type: integer
    required:
    - member1
    - member2
    - score
    type: object
  view.MatchTeamV2:
    properties:
      member1:
        type: integer
      member2:
        type: integer
      score:
        type: integer
    required:
    - member1
    - member2
    - score
    type: object
  view.MatchV2:
    properties:
      team1:
        $ref: '#/definitions/view.MatchTeamV2'
      team2:
        $ref: '#/definitions/view.MatchTeamV2'
    required:
    - team1
    - team2
    type: object
  view.PlayerHistoryDetails:
    properties:
      date:
        type: string
      mmr:
        type: integer
      name:
        type: string
      userId:
        type: integer
    required:
    - date
    - mmr
    - name
    - userId
    type: object
  view.ProfileDetails:
    properties:
      userId:
        type: integer
    type: object
  view.TimeStatisticsEntry:
    properties:
      count:
        type: integer
      dayOfWeek:
        description: 0-6, 0 is Sunday
        type: integer
      hourOfDay:
        description: 0-23
        type: integer
    required:
    - count
    - dayOfWeek
    - hourOfDay
    type: object
  view.UserDetails:
    properties:
      displayName:
        type: string
      name:
        type: string
      userId:
        type: integer
    required:
    - name
    - userId
    type: object
info:
  contact: {}
paths:
  /v1/admin/recalculate:
    post:
      consumes:
      - application/json
      description: Start recalculating matches
      produces:
      - application/json
      responses:
        "200":
          description: recalculation done
          schema:
            type: string
      summary: Recalculate matches
      tags:
      - Admin
  /v1/mmr/matches:
    get:
      description: Get all matches
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/view.MatchDetails'
            type: array
      summary: Get matches
      tags:
      - Matches
    post:
      consumes:
      - application/json
      description: Submit a match for MMR calculation
      parameters:
      - description: Match object
        in: body
        name: match
        required: true
        schema:
          $ref: '#/definitions/view.Match'
      produces:
      - application/json
      responses:
        "200":
          description: match submitted
          schema:
            type: string
      summary: Submit a match
      tags:
      - Matches
  /v1/profile:
    get:
      description: Get profile details of the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.ProfileDetails'
      summary: Get profile
      tags:
      - Profile
  /v1/profile/claim:
    post:
      description: Claims a user by ID
      parameters:
      - description: User to be claimed
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/view.ClaimUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.ProfileDetails'
      summary: Claim user
      tags:
      - Profile
  /v1/stats/leaderboard:
    get:
      consumes:
      - application/json
      description: Get leaderboard stats including wins, loses, and MMR of users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/repos.LeaderboardEntry'
            type: array
      summary: Get leaderboard stats
      tags:
      - Leaderboard
  /v1/stats/player-history:
    get:
      consumes:
      - application/json
      description: Get player history including MMR and date
      parameters:
      - description: User ID
        in: query
        name: userId
        type: integer
      - description: Start date
        in: query
        name: start
        type: string
      - description: End date
        in: query
        name: end
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/view.PlayerHistoryDetails'
            type: array
      summary: Get player history
      tags:
      - Statistics
  /v1/stats/time-distribution:
    get:
      consumes:
      - application/json
      description: Get number of matches for each day of week and hour of day
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/view.TimeStatisticsEntry'
            type: array
      summary: Get match distribution over time
      tags:
      - Statistics
  /v1/users:
    get:
      description: Lists all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/view.UserDetails'
            type: array
      summary: List users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Creates a new user
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/view.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.UserDetails'
      summary: Create user
      tags:
      - Users
  /v1/users/{id}:
    get:
      description: Get user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.UserDetails'
      summary: Get user
      tags:
      - Users
  /v1/users/search:
    get:
      description: Searches users by name
      parameters:
      - description: Name to search for
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/view.UserDetails'
            type: array
      summary: Search users
      tags:
      - Users
  /v2/mmr/matches:
    get:
      description: Get all matches
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: User ID
        in: query
        name: userId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/view.MatchDetailsV2'
            type: array
      summary: Get matches
      tags:
      - Matches
    post:
      consumes:
      - application/json
      description: Submit a match for MMR calculation
      parameters:
      - description: Match object
        in: body
        name: match
        required: true
        schema:
          $ref: '#/definitions/view.MatchV2'
      produces:
      - application/json
      responses:
        "200":
          description: match submitted
          schema:
            type: string
      summary: Submit a match
      tags:
      - Matches
swagger: "2.0"
